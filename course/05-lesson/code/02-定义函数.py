# 定义一个函数
# 定义形参时，可以为形参指定默认值
# 指定了默认值以后，如果用户传递了参数则默认值没有任何作用
# 	如果用户没有传递，则默认值就会生效
def  fn (a=2,b=4,c=23):
	print('a=',a)
	print('b=',b)
	print('c=',c)
	print(a+b+c)
# fn()

# 实参的传递方式
# 位置参数
# 位置参数就是将对应位置的实参赋值给对应位置的形参
# 第一个实参赋值给第一个形参，第二个实参赋值给第二个形参……
# fn(1,2,4)


# 关键字参数
# 关键字参数，可以不按照形参定义的顺序去传递，而直接根据形参名去传递参数
# fn(b=1,a=2,c=3)

# 位置参数和关键字参数可以混合使用,必须将位置参数写前面
# fn(1,b=34)

 # 函数在调用时，解析器不会检查实参的类型
 # 实参可以传递任意类型的对象


# def  fn (a):
# 	print('a=',a)
# c="124"
# fn(c)

def  fn1( a):
	# 在函数中对形参进行重新赋值，不会影响其他变量
	# a=12
	# a是一个列表，尝试修改列表中的元素
	# 如果形参执行是一个对象，当我们通过形参，去修改对象时，会影响到所有指向该对象的变量
	a[2]=23
	print('a=',a)

c = 13
c=[2,3,4]
fn1(c.copy())
print(c)